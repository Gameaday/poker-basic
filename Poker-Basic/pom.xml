<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.pokermon</groupId>
    <artifactId>pokermon</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>
    
    <name>Pokermon</name>
    <description>Cross-platform poker game with monster collection mechanics, built with pure Kotlin for Android and desktop platforms</description>
    <url>https://github.com/Gameaday/poker-basic</url>
    
    <developers>
        <developer>
            <id>gameaday</id>
            <name>Carl Nelson</name>
            <email>gameaday@example.com</email>
            <organization>Gameaday</organization>
            <roles>
                <role>Lead Developer</role>
                <role>Architect</role>
            </roles>
        </developer>
    </developers>
    
    <scm>
        <connection>scm:git:git://github.com/Gameaday/poker-basic.git</connection>
        <developerConnection>scm:git:ssh://github.com:Gameaday/poker-basic.git</developerConnection>
        <url>https://github.com/Gameaday/poker-basic/tree/main</url>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.version>5.13.4</junit.version>
        <maven.surefire.version>3.2.5</maven.surefire.version>
        <maven.failsafe.version>3.2.5</maven.failsafe.version>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
        <kotlin.version>1.9.22</kotlin.version>
        <kotlinx.coroutines.version>1.7.3</kotlinx.coroutines.version>
        <compose.version>1.5.4</compose.version>
        <!-- Git commit count for dynamic versioning -->
        <git.commit.count>0</git.commit.count>
        <!-- Native executable configuration -->
        <native.image.enabled>true</native.image.enabled>
        <graalvm.version>23.1.1</graalvm.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Kotlin Standard Library -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        
        <!-- Kotlin Coroutines for Android async programming -->
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
            <version>${kotlinx.coroutines.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-android</artifactId>
            <version>${kotlinx.coroutines.version}</version>
        </dependency>
        
        <!-- JavaFX for cross-platform UI -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>21.0.1</version>
        </dependency>
        
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>21.0.1</version>
        </dependency>
        
        <!-- GraalVM Native Image support -->
        <dependency>
            <groupId>org.graalvm.nativeimage</groupId>
            <artifactId>svm</artifactId>
            <version>23.1.1</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>version.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>version.properties</exclude>
                </excludes>
            </resource>
        </resources>
        
        <plugins>
            <!-- Execute git command to get commit count for dynamic versioning -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>git-commit-count</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>bash</executable>
                            <arguments>
                                <argument>-c</argument>
                                <argument>
                                # Use main branch commit count specifically to avoid pull request resets
                                MAIN_COMMITS=$(git rev-list --count origin/main 2>/dev/null || git rev-list --count origin/master 2>/dev/null || echo 0);
                                # Fallback to HEAD if main/master not available 
                                HEAD_COMMITS=$(git rev-list --count HEAD 2>/dev/null || echo 0);
                                # Use the higher count to ensure proper versioning
                                if [ "$MAIN_COMMITS" -gt "$HEAD_COMMITS" ]; then 
                                    echo -n "$MAIN_COMMITS"; 
                                elif [ "$HEAD_COMMITS" -gt 0 ]; then 
                                    echo -n "$HEAD_COMMITS"; 
                                else 
                                    echo -n "1"; 
                                fi
                                </argument>
                            </arguments>
                            <outputFile>${project.build.directory}/git-commit-count.txt</outputFile>
                            <successCodes>
                                <successCode>0</successCode>
                            </successCodes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Replace placeholders in Version.java with actual git commit count -->
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <version>1.5.3</version>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>${project.build.sourceDirectory}/com/pokermon/Version.java</include>
                    </includes>
                    <replacements>
                        <replacement>
                            <token>@git.commit.count@</token>
                            <valueFile>${project.build.directory}/git-commit-count.txt</valueFile>
                        </replacement>
                    </replacements>
                </configuration>
            </plugin>
            
            <!-- Kotlin Maven Plugin - Kotlin-first compilation strategy -->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <!-- Prioritize Kotlin sources for Kotlin-native approach -->
                            <sourceDirs>
                                <sourceDir>src/main/kotlin</sourceDir>
                                <sourceDir>src/main/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>src/test/kotlin</sourceDir>
                                <sourceDir>src/test/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <jvmTarget>17</jvmTarget>
                    <!-- Enhanced Kotlin compiler options for native development -->
                    <args>
                        <arg>-Xjvm-default=all</arg>
                        <arg>-Xjsr305=strict</arg>
                        <arg>-opt-in=kotlin.RequiresOptIn</arg>
                    </args>
                </configuration>
            </plugin>
            
            <!-- Maven Resources Plugin with proper encoding for properties files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <propertiesEncoding>UTF-8</propertiesEncoding>
                </configuration>
            </plugin>
            
            <!-- Java Compiler Plugin for legacy Java sources (runs after Kotlin) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                    <encoding>UTF-8</encoding>
                    <!-- Java compilation happens after Kotlin for optimal interop -->
                </configuration>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Tests.java</include>
                    </includes>
                    <reportFormat>xml</reportFormat>
                    <useSystemClassLoader>false</useSystemClassLoader>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Native packaging only - no JAR creation for delivery -->
            <!-- JAR plugin disabled - focusing on platform-specific native executables -->
            
            <!-- GraalVM Native Image Plugin for creating platform-specific native executables -->
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>0.9.28</version>
                <extensions>true</extensions>
                <configuration>
                    <imageName>pokermon</imageName>
                    <mainClass>com.pokermon.GameLauncher</mainClass>
                    <buildArgs>
                        <buildArg>--no-fallback</buildArg>
                        <buildArg>--enable-preview</buildArg>
                        <buildArg>--install-exit-handlers</buildArg>
                        <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                        <buildArg>-H:IncludeResources=.*\.properties</buildArg>
                        <buildArg>-H:IncludeResources=.*\.txt</buildArg>
                        <buildArg>-H:IncludeResources=.*\.png</buildArg>
                        <buildArg>-H:IncludeResources=.*\.jpg</buildArg>
                        <buildArg>-H:IncludeResources=.*\.fxml</buildArg>
                    </buildArgs>
                    <metadataRepository>
                        <enabled>true</enabled>
                    </metadataRepository>
                </configuration>
                <executions>
                    <execution>
                        <id>build-native</id>
                        <goals>
                            <goal>compile-no-fork</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    
    <!-- Profiles for platform-specific native packaging -->
    <profiles>
        <!-- Windows native executable profile -->
        <profile>
            <id>windows-native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.panteleyev</groupId>
                        <artifactId>jpackage-maven-plugin</artifactId>
                        <version>1.6.5</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jpackage</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <name>Pokermon</name>
                            <appVersion>${project.version}</appVersion>
                            <vendor>Carl Nelson (@Gameaday)</vendor>
                            <description>Kotlin-Native Poker Game - Pokermon (Poker Monster)</description>
                            <copyright>© 2024 Carl Nelson (@Gameaday)</copyright>
                            
                            <!-- Windows-specific configuration -->
                            <type>EXE</type>
                            <winDirChooser>true</winDirChooser>
                            <winMenu>true</winMenu>
                            <winShortcut>true</winShortcut>
                            
                            <!-- Native executable configuration -->
                            <mainClass>com.pokermon.GameLauncher</mainClass>
                            
                            <!-- Runtime configuration - using compiled classes -->
                            <input>${project.build.directory}/classes</input>
                            <destination>${project.build.directory}/native-packages</destination>
                            
                            <!-- Native modules -->
                            <addModules>
                                <addModule>java.base</addModule>
                                <addModule>java.desktop</addModule>
                                <addModule>java.logging</addModule>
                                <addModule>javafx.controls</addModule>
                                <addModule>javafx.fxml</addModule>
                            </addModules>
                            
                            <!-- JVM options for native packaging -->
                            <javaOptions>
                                <option>-Dfile.encoding=UTF-8</option>
                                <option>-Dkotlin.native=true</option>
                                <option>--add-opens=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>
                            </javaOptions>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- Linux native executable profile -->
        <profile>
            <id>linux-native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.panteleyev</groupId>
                        <artifactId>jpackage-maven-plugin</artifactId>
                        <version>1.6.5</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jpackage</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <name>pokermon</name>
                            <appVersion>${project.version}</appVersion>
                            <vendor>Carl Nelson (@Gameaday)</vendor>
                            <description>Kotlin-Native Poker Game with Monster Collection</description>
                            <copyright>© 2024 Carl Nelson (@Gameaday)</copyright>
                            
                            <!-- Linux-specific configuration -->
                            <type>DEB</type>
                            <linuxShortcut>true</linuxShortcut>
                            <linuxMenuGroup>Games</linuxMenuGroup>
                            
                            <!-- Native executable configuration -->
                            <mainClass>com.pokermon.GameLauncher</mainClass>
                            
                            <!-- Runtime configuration - using compiled classes -->
                            <input>${project.build.directory}/classes</input>
                            <destination>${project.build.directory}/native-packages</destination>
                            
                            <!-- Native modules -->
                            <addModules>
                                <addModule>java.base</addModule>
                                <addModule>java.desktop</addModule>
                                <addModule>java.logging</addModule>
                                <addModule>javafx.controls</addModule>
                                <addModule>javafx.fxml</addModule>
                            </addModules>
                            
                            <!-- JVM options for native packaging -->
                            <javaOptions>
                                <option>-Dfile.encoding=UTF-8</option>
                                <option>-Dkotlin.native=true</option>
                                <option>--add-opens=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>
                            </javaOptions>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- macOS native executable profile -->
        <profile>
            <id>macos-native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.panteleyev</groupId>
                        <artifactId>jpackage-maven-plugin</artifactId>
                        <version>1.6.5</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jpackage</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <name>Pokermon</name>
                            <appVersion>${project.version}</appVersion>
                            <vendor>Carl Nelson (@Gameaday)</vendor>
                            <description>Kotlin-Native Poker Game with Monster Collection</description>
                            <copyright>© 2024 Carl Nelson (@Gameaday)</copyright>
                            
                            <!-- macOS-specific configuration -->
                            <type>DMG</type>
                            
                            <!-- Native executable configuration -->
                            <mainClass>com.pokermon.GameLauncher</mainClass>
                            
                            <!-- Runtime configuration - using compiled classes -->
                            <input>${project.build.directory}/classes</input>
                            <destination>${project.build.directory}/native-packages</destination>
                            
                            <!-- Native modules -->
                            <addModules>
                                <addModule>java.base</addModule>
                                <addModule>java.desktop</addModule>
                                <addModule>java.logging</addModule>
                                <addModule>javafx.controls</addModule>
                                <addModule>javafx.fxml</addModule>
                            </addModules>
                            
                            <!-- JVM options for native packaging -->
                            <javaOptions>
                                <option>-Dfile.encoding=UTF-8</option>
                                <option>-Dkotlin.native=true</option>
                                <option>--add-opens=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>
                            </javaOptions>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>