apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

/**
 * Generate dynamic version code using timestamp-based approach.
 * This ensures monotonically increasing version codes that work regardless of git history depth.
 * Uses days since epoch (June 25, 2025) plus hours to create reasonable version codes.
 * Using provider API for configuration cache compatibility.
 * 
 * IMPORTANT: Base epoch is June 25, 2025 (NOT January 1, 2024)
 * This date was chosen as the project start reference point.
 */
def getVersionCode = providers.exec {
    commandLine 'bash', '-c', '''
        # Base date: June 25, 2025 (epoch for this project)
        # IMPORTANT: This is June 25, 2025 00:00:00 UTC, not January 1, 2024
        BASE_EPOCH=1750809600  # June 25, 2025 00:00:00 UTC (Unix timestamp)
        CURRENT_EPOCH=$(date +%s)
        
        # Calculate days since base epoch
        DAYS_SINCE_BASE=$(( (CURRENT_EPOCH - BASE_EPOCH) / 86400 ))
        
        # Get current hour (0-23) to allow multiple builds per day
        CURRENT_HOUR=$(date +%H)
        
        # Version code = (days * 100) + hour
        # This allows up to 24 builds per day with predictable incrementing
        VERSION_CODE=$(( (DAYS_SINCE_BASE * 100) + CURRENT_HOUR ))
        
        # Ensure minimum version code of 100 (for compatibility)
        if [ "$VERSION_CODE" -lt 100 ]; then
            VERSION_CODE=100
        fi
        
        echo "$VERSION_CODE"
    '''
}.standardOutput.asText.map { 
    def versionCode = it.trim().toInteger()
    // Ensure reasonable bounds for Android version codes
    return versionCode > 0 ? versionCode : 100
}

android {
    namespace 'com.pokermon.android'
    compileSdk 34  // Using stable compile SDK
    buildToolsVersion "34.0.0"

    defaultConfig {
        applicationId "com.pokermon.android"
        minSdk 28
        targetSdk 34  // Using stable target SDK
        versionCode getVersionCode.get() // Dynamic version code based on timestamp
        versionName "1.0.${getVersionCode.get()}" // Dynamic version name with timestamp-based version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Optimize for API 28+ features
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            // Faster debug builds
            minifyEnabled false
            debuggable true
            // Use debug suffix to avoid package conflicts with release builds
            applicationIdSuffix ".debug"
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    
    kotlinOptions {
        jvmTarget = '17'
    }
    
    buildFeatures {
        compose true
        buildConfig = true
    }
    
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.4'
    }
    
    // Optimization settings for faster builds
    packagingOptions {
        resources {
            excludes += ['/META-INF/{AL2.0,LGPL2.1}']
        }
    }
    
    // Include shared Kotlin source files directly for pure Kotlin-native architecture
    sourceSets {
        main {
            java {
                srcDirs += '../Poker-Basic/src/main/kotlin'
                srcDirs += '../Poker-Basic/src/main/java'
            }
        }
    }
}

dependencies {
    // Direct Kotlin source integration - no external module dependencies needed
    // All Kotlin source files are included directly via sourceSets configuration
    
    // Kotlin-native dependencies - aligned with main project
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.9.22'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    
    // Android and UI dependencies - Conservative stable updates
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation platform('androidx.compose:compose-bom:2024.02.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    
    // Navigation for Compose - aligned with lifecycle version
    implementation 'androidx.navigation:navigation-compose:2.7.6'
    
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2024.02.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}