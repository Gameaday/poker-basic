// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.4'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.10'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

// Standard cleanup task
task clean(type: Delete) {
    delete rootProject.buildDir
    delete fileTree(dir: '.', include: 'app/build')
}

// Verification task that works offline
task verifyDualPlatformSetup {
    group = 'verification'
    description = 'Verifies that both Java/Maven and Android/Gradle configurations are ready'
    
    doLast {
        println "=== Dual Platform Build Setup Verification ==="
        
        // Check Java/Maven setup
        def pomFile = file('Poker-Basic/pom.xml')
        if (pomFile.exists()) {
            println "✅ Java/Maven build: ${pomFile.path}"
            println "   Build command: cd Poker-Basic && mvn clean package"
        } else {
            println "❌ Java/Maven pom.xml not found"
        }
        
        // Check Android/Gradle setup
        def androidManifest = file('app/src/main/AndroidManifest.xml')
        def appBuildGradle = file('app/build.gradle')
        def gradleWrapper = file('gradlew')
        def androidActivity = file('app/src/main/java/com/pokermon/MainActivity.java')
        
        if (androidManifest.exists() && appBuildGradle.exists() && gradleWrapper.exists() && androidActivity.exists()) {
            println "✅ Android/Gradle build configuration complete:"
            println "   - AndroidManifest.xml: ${androidManifest.exists()}"
            println "   - app/build.gradle: ${appBuildGradle.exists()}"
            println "   - Gradle wrapper: ${gradleWrapper.exists()}"
            println "   - MainActivity.java: ${androidActivity.exists()}"
            println "   Build command: ./gradlew assembleDebug"
        } else {
            println "❌ Android build configuration incomplete"
        }
        
        // Check shared source integration
        def sharedJavaSource = file('Poker-Basic/src/main/java/com/pokermon')
        if (sharedJavaSource.exists()) {
            def javaFiles = sharedJavaSource.listFiles().findAll { it.name.endsWith('.java') }
            println "✅ Shared Java source: ${javaFiles.size()} files in com.pokermon package"
            println "   Shared files: ${javaFiles.collect { it.name }.join(', ')}"
        }
        
        println ""
        println "=== Network Status ==="
        println "Internet connectivity: ${canBuildAndroid ? 'Available' : 'Limited/Offline'}"
        
        println ""
        println "=== Build Instructions ==="
        println "JAR (Desktop):  cd Poker-Basic && mvn clean package"
        if (canBuildAndroid) {
            println "APK (Android):  ./gradlew assembleDebug"
        } else {
            println "APK (Android):  ./gradlew assembleDebug (requires internet connection)"
        }
        println ""
        println "✅ Dual platform support configured successfully!"
    }
>>>>>>> master
}