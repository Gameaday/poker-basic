// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.4.0'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.22'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

// Standard cleanup task
task clean(type: Delete) {
    delete rootProject.buildDir
    delete fileTree(dir: '.', include: 'app/build')
}

// Verification task that works offline - updated for pure Kotlin-native architecture
task verifyKotlinNativeSetup {
    group = 'verification'
    description = 'Verifies that pure Kotlin-native build configuration is ready'
    
    doLast {
        println "=== Pure Kotlin-Native Build Setup Verification ==="
        
        // Check Kotlin source setup
        def desktopKotlinSourcePath = 'desktop/src/main/kotlin/com/pokermon'
        def sharedKotlinSourcePath = 'shared/src/main/kotlin/com/pokermon'
        def androidKotlinSourcePath = 'android/src/main/java/com/pokermon'
        
        def desktopKotlinSource = new File(desktopKotlinSourcePath)
        def sharedKotlinSource = new File(sharedKotlinSourcePath)
        def androidKotlinSource = new File(androidKotlinSourcePath)
        
        if (desktopKotlinSource.exists() || new File('Poker-Basic/src/main/kotlin').exists()) {
            println "✅ Desktop Kotlin source ready"
        } else {
            println "⚠️  Desktop Kotlin source: Setting up..."
        }
        
        // Check Android/Gradle setup
        def androidManifestPath = 'android/src/main/AndroidManifest.xml'
        def androidBuildGradlePath = 'android/build.gradle'
        def gradleWrapperPath = 'gradlew'
        def androidActivityPath = 'android/src/main/java/com/pokermon/android/MainActivity.kt'
        
        def androidManifest = new File(androidManifestPath)
        def androidBuildGradle = new File(androidBuildGradlePath)
        def gradleWrapper = new File(gradleWrapperPath)
        def androidActivity = new File(androidActivityPath)
        
        if (androidManifest.exists() && androidBuildGradle.exists() && gradleWrapper.exists() && androidActivity.exists()) {
            println "✅ Android/Gradle build configuration complete"
            println "   Build command: ./gradlew :android:assembleDebug"
        } else {
            println "❌ Android build configuration incomplete"
        }
        
        // Check Kotlin source files
        def kotlinSourcePath = 'Poker-Basic/src/main/kotlin/com/pokermon'
        def kotlinSource = new File(kotlinSourcePath)
        if (kotlinSource.exists()) {
            def kotlinFiles = kotlinSource.listFiles().findAll { it.name.endsWith('.kt') }
            println "✅ Kotlin source: ${kotlinFiles.size()} files in com.pokermon package"
        }
        
        println ""
        println "=== Network Status ==="
        try {
            // Simple network check - will work in environments with network access
            def networkAvailable = "ping -c 1 google.com".execute().waitFor() == 0
            println "Internet connectivity: ${networkAvailable ? 'Available' : 'Limited/Offline'}"
        } catch (Exception e) {
            println "Internet connectivity: Limited/Offline"
        }
        
        println ""
        println "=== Pure Kotlin-Native Build Instructions ==="
        println "APK (Android):     ./gradlew :android:assembleDebug (requires internet)"
        println "Desktop App:       ./gradlew :desktop:run (native Kotlin application)"
        println "Native Executable: ./gradlew :desktop:createDistribution"
        println ""
        println "✅ Pure Kotlin-native cross-platform build support ready!"
    }
}