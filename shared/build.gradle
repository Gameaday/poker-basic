// Pokermon Shared - Pure Kotlin-Native Core Module
// Replaces Maven with Gradle for unified build system

plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'java-library'
    id 'application'
}

// Application configuration
application {
    mainClass = 'com.pokermon.GameLauncher'
}

// Java compatibility - Updated to Java 21
java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

// Kotlin configuration - Updated to Java 21
kotlin {
    jvmToolchain(21)
}

// Dynamic version from root project
version = rootProject.version
group = rootProject.group

// Source sets prioritizing Kotlin
sourceSets {
    main {
        kotlin {
            srcDirs 'src/main/kotlin'
        }
        java {
            srcDirs 'src/main/java'
        }
        resources {
            srcDirs 'src/main/resources'
        }
    }
    test {
        kotlin {
            srcDirs 'src/test/kotlin'
        }
        java {
            srcDirs 'src/test/java'
        }
        resources {
            srcDirs 'src/test/resources'
        }
    }
}

// Dependencies - Pure Kotlin-native stack with aligned JUnit 5 - Updated versions
dependencies {
    // Kotlin standard library and coroutines - Latest versions
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${findProperty('kotlin.version') ?: '2.2.10'}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${findProperty('kotlinx.coroutines.version') ?: '1.10.1'}"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.8.0"
    
    // Testing with properly aligned JUnit 5 platform - Latest versions
    testImplementation platform('org.junit:junit-bom:5.11.3')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.platform:junit-platform-launcher'
    testImplementation "org.jetbrains.kotlin:kotlin-test:${findProperty('kotlin.version') ?: '2.2.10'}"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5:${findProperty('kotlin.version') ?: '2.2.10'}"
}

// Enhanced test configuration
test {
    useJUnitPlatform()
    maxParallelForks = Runtime.runtime.availableProcessors()
    
    // Test logging
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = "full"
    }
    
    // System properties for tests
    systemProperty 'kotlin.test.junit5.displayMode', 'verbose'
}

// Handle duplicate resources
processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Fat JAR for standalone execution - Updated for Gradle 9 compatibility
tasks.register('fatJar', Jar) {
    group = 'build'
    description = 'Creates executable JAR with all dependencies'
    
    archiveClassifier = 'fat'
    from sourceSets.main.output
    
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
    
    manifest {
        attributes(
            'Implementation-Title': 'Pokermon Kotlin-Native',
            'Implementation-Version': project.version,
            'Main-Class': 'com.pokermon.GameLauncher',
            'Built-By': System.getProperty('user.name'),
            'Built-Date': new Date().toString(),
            'Kotlin-Version': findProperty('kotlin.version') ?: '2.2.10'
        )
    }
    
    // Exclude duplicate files
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Task to run console version - Updated for Gradle 9 compatibility
tasks.register('runConsole', JavaExec) {
    group = 'application'
    description = 'Run Pokermon in console mode'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.pokermon.ConsoleMainKt'
    args '--basic'
}

// Task for development builds with version info - Updated for Gradle 9 compatibility
tasks.register('developmentInfo') {
    group = 'help'
    description = 'Display development information'
    
    doLast {
        println "=== Pokermon Kotlin-Native Development Info ==="
        println "Project: ${project.name}"
        println "Version: ${project.version}"
        println "Kotlin: ${findProperty('kotlin.version') ?: '2.2.10'}"
        println "Main class: ${application.mainClass.get()}"
        println ""
        println "Available tasks:"
        println "  ./gradlew :shared:fatJar       - Build executable JAR"
        println "  ./gradlew :shared:runConsole   - Run console version"
        println "  ./gradlew :shared:test         - Run tests"
        println "  ./gradlew :shared:run          - Run GUI version"
    }
}

// Kotlin compilation options - Updated for Java 21 and Gradle 9
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = '21'
        freeCompilerArgs += [
            '-Xjsr305=strict',
            '-opt-in=kotlin.ExperimentalStdlibApi',
            '-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
        ]
    }
}